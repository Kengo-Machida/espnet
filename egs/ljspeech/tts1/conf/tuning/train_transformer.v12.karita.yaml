# This is the Transformer TTS configuration

# network architecture related
model-module: espnet.nets.pytorch_backend.e2e_tts_transformer:Transformer
embed-dim: 0
eprenet-conv-layers: 0  # one more linear layer w/o non-linear will be added for 0-centor
eprenet-conv-filts: 0
eprenet-conv-chans: 80
dprenet-layers: 0  # one more linear layer w/o non-linear will be added for 0-centor
dprenet-units: 256
adim: 256
aheads: 4
elayers: 4
eunits: 1024
dlayers: 4
dunits: 1024
postnet-layers: 0
postnet-filts: 5
postnet-chans: 256
use-masking: True
bce-pos-weight: 5.0
use-batch-norm: True
use-scaled-pos-enc: True
encoder-normalize-before: False
decoder-normalize-before: False

# minibatch related
batch-sort-key: output # shuffle or input or output
batch-frames-out: 14000  # 16 * (870 * 80 + 180 * 35)
                       # batch-size * (max_out * dim_out + max_in * dim_in)
                       # resuling in 15 ~ 81 samples in batch (611 batches per epochs) for ljspeech

# training related
transformer-init: pytorch
transformer-warmup-steps: 10000
transformer-lr: 1.0
initial-encoder-alpha: 1.0
initial-decoder-alpha: 1.0
dropout-rate: 0.1
eprenet-dropout-rate: 0.1
dprenet-dropout-rate: 0.1
postnet-dropout-rate: 0.1
transformer-attn-dropout-rate: 0.1

# optimization related
opt: noam
accum-grad: 4
grad-clip: 5
weight-decay: 0.0
epochs: 1000
patience: 0
